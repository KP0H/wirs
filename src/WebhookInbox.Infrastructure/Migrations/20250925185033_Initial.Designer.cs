// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebhookInbox.Infrastructure;

#nullable disable

namespace WebhookInbox.Infrastructure.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250925185033_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebhookInbox.Infrastructure.Entities.DeliveryAttempt", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("EndpointId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("EventId")
                        .HasColumnType("uuid");

                    b.Property<DateTimeOffset?>("NextAttemptAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("ResponseBody")
                        .HasColumnType("text");

                    b.Property<int?>("ResponseCode")
                        .HasColumnType("integer");

                    b.Property<DateTimeOffset>("SentAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("Success")
                        .HasColumnType("boolean");

                    b.Property<int>("Try")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("EndpointId");

                    b.HasIndex("EventId", "EndpointId", "Try")
                        .IsUnique();

                    b.ToTable("delivery_attempts", (string)null);
                });

            modelBuilder.Entity("WebhookInbox.Infrastructure.Entities.Endpoint", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<string>("PolicyJson")
                        .HasColumnType("jsonb");

                    b.Property<int?>("RateLimitPerMinute")
                        .HasColumnType("integer");

                    b.Property<string>("Secret")
                        .HasColumnType("text");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("endpoints", (string)null);
                });

            modelBuilder.Entity("WebhookInbox.Infrastructure.Entities.Event", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Headers")
                        .IsRequired()
                        .HasColumnType("jsonb");

                    b.Property<byte[]>("Payload")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.Property<DateTimeOffset>("ReceivedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("SignatureStatus")
                        .HasColumnType("integer");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("Source", "ReceivedAt");

                    b.ToTable("events", (string)null);
                });

            modelBuilder.Entity("WebhookInbox.Infrastructure.Entities.DeliveryAttempt", b =>
                {
                    b.HasOne("WebhookInbox.Infrastructure.Entities.Endpoint", "Endpoint")
                        .WithMany("Attempts")
                        .HasForeignKey("EndpointId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebhookInbox.Infrastructure.Entities.Event", "Event")
                        .WithMany("Attempts")
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Endpoint");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("WebhookInbox.Infrastructure.Entities.Endpoint", b =>
                {
                    b.Navigation("Attempts");
                });

            modelBuilder.Entity("WebhookInbox.Infrastructure.Entities.Event", b =>
                {
                    b.Navigation("Attempts");
                });
#pragma warning restore 612, 618
        }
    }
}
